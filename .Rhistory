# display the table
kable_styling(kable(my_MSE_table))
# load the package
library(project3part1package)
# load the other packages used in this vignette
library(ggplot2)
library(kableExtra)
plot(x = actual_data, y = fitted_data)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# load the package
library(project3part1package)
# load the other packages used in this vignette
library(ggplot2)
library(kableExtra)
# load the Gapminder data set
data(my_gapminder)
my_data <- my_gapminder$lifeExp
hypothesis1 <- my_t.test(x = my_data, alternative = "two.sided", mu = 60)
kable(data.frame(hypothesis1))
hypothesis2 <- my_t.test(x = my_data, alternative = "less", mu = 60)
kable(data.frame(hypothesis2))
hypothesis3 <- my_t.test(x = my_data, alternative = "greater", mu = 60)
kable(data.frame(hypothesis3))
my_fit <- my_lm(lifeExp ~ gdpPercap + continent, data = my_gapminder)
signif(my_fit, 4)
gdpPercap_coeff <- signif(my_fit[2, 1], 3)
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw(base_size = 15) +
labs(title = "Actual v. Fitted Life Expectancy")
# load the penguins data
data(my_penguins)
# remove NAs from penguins
penguins_no_NA <- na.omit(my_penguins)
# separate the covariates and the true classification
my_data <- data.frame("bill_length" = penguins_no_NA$bill_length_mm,
"bill_depth" = penguins_no_NA$bill_depth_mm,
"flipper_length" = penguins_no_NA$flipper_length_mm,
"body_mass" = penguins_no_NA$body_mass_g)
my_cl <- penguins_no_NA$species
train_miss <- c()
cv_miss <- c()
# find the training and cv misclassification rates for k_nn from 1 through 10
for (k_nn in 1:10) {
my_knn_cv_out <- my_knn_cv(data = my_data, cl = my_cl, k_nn = k_nn, k_cv = 5)
train_miss[k_nn] <- mean(my_knn_cv_out[[1]] != my_cl)
cv_miss[k_nn] <- my_knn_cv_out[[2]]
}
# create a table with the results
my_table <- data.frame(k_nn = 1:10,
cv_err = round(cv_miss, 4),
train_err = round(train_miss, 4))
kable_styling(kable(my_table))
# create the matrix to store all the simulated MSEs
my_cv_MSEs <- matrix(NA, nrow = 30, ncol = 3)
counter <- 1
for (k in c(2, 5, 10)) {
k_MSE <- c()
for (i in 1:30) {
k_MSE[i] <- my_rf_cv(k)
}
# store the 30 simulated values for this k in its own row of the overall matrix
my_cv_MSEs[, counter] <- k_MSE
counter <- counter + 1
}
# the matrix of the generated average MSEs
head(my_cv_MSEs)
k2_cv_MSEs <- data.frame("MSE" = my_cv_MSEs[, 1])
k2_box_plot <- ggplot(data = k2_cv_MSEs, aes(x = "", y = MSE)) +
geom_boxplot(fill = "lightblue") +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 2",
x = "k = 2", y = "Average MSE") +
theme(plot.title = element_text(hjust = 0.5))
k2_box_plot
k5_cv_MSEs <- data.frame("MSE" = my_cv_MSEs[, 2])
k5_box_plot <- ggplot(data = k5_cv_MSEs, aes(x = "", y = MSE)) +
geom_boxplot(fill = "red") +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 5",
x = "k = 5", y = "Average MSE") +
theme(plot.title = element_text(hjust = 0.5))
k5_box_plot
k10_cv_MSEs <- data.frame("MSE" = my_cv_MSEs[, 3])
k10_box_plot <- ggplot(data = k10_cv_MSEs, aes(x = "", y = MSE)) +
geom_boxplot(fill = "lightgreen") +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 10",
x = "k = 10", y = "Average MSE") +
theme(plot.title = element_text(hjust = 0.5))
k10_box_plot
combined_cv_MSEs <- data.frame("Values" = c(my_cv_MSEs[, 1], my_cv_MSEs[, 2], my_cv_MSEs[, 3]),
"k" = c(rep(2, 30), rep(5, 30), rep(10, 30)))
combined_box_plot <- ggplot(data = combined_cv_MSEs, aes(x = as.factor(k), y = Values, fill = as.factor(k))) +
geom_boxplot() +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 2, 5, 10",
x = "k", y = "Average MSE", fill = "k") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_manual(values = c("lightblue", "red", "lightgreen"))
combined_box_plot
# create a table with each value of k and the corresponding summary statistics
my_MSE_table <- matrix(NA, nrow = 3, ncol = 3)
my_MSE_table[1, 1] <- 2
my_MSE_table[2, 1] <- 5
my_MSE_table[3, 1] <- 10
my_MSE_table[1, 2] <- mean(my_cv_MSEs[, 1])
my_MSE_table[2, 2] <- mean(my_cv_MSEs[, 2])
my_MSE_table[3, 2] <- mean(my_cv_MSEs[, 3])
my_MSE_table[1, 3] <- sd(my_cv_MSEs[, 1])
my_MSE_table[2, 3] <- sd(my_cv_MSEs[, 2])
my_MSE_table[3, 3] <- sd(my_cv_MSEs[, 3])
my_MSE_table <- data.frame(my_MSE_table)
colnames(my_MSE_table) <- c("k", "mean", "standard deviation")
# display the table
kable_styling(kable(my_MSE_table))
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw(base_size = 15) +
labs(title = "Actual v. Fitted Life Expectancy")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# load the package
library(project3part1package)
# load the other packages used in this vignette
library(ggplot2)
library(kableExtra)
# load the Gapminder data set
data(my_gapminder)
my_data <- my_gapminder$lifeExp
hypothesis1 <- my_t.test(x = my_data, alternative = "two.sided", mu = 60)
kable(data.frame(hypothesis1))
hypothesis2 <- my_t.test(x = my_data, alternative = "less", mu = 60)
kable(data.frame(hypothesis2))
hypothesis3 <- my_t.test(x = my_data, alternative = "greater", mu = 60)
kable(data.frame(hypothesis3))
my_fit <- my_lm(lifeExp ~ gdpPercap + continent, data = my_gapminder)
signif(my_fit, 4)
gdpPercap_coeff <- signif(my_fit[2, 1], 3)
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw(base_size = 15) +
labs(title = "Actual v. Fitted Life Expectancy")
# load the penguins data
data(my_penguins)
# remove NAs from penguins
penguins_no_NA <- na.omit(my_penguins)
# separate the covariates and the true classification
my_data <- data.frame("bill_length" = penguins_no_NA$bill_length_mm,
"bill_depth" = penguins_no_NA$bill_depth_mm,
"flipper_length" = penguins_no_NA$flipper_length_mm,
"body_mass" = penguins_no_NA$body_mass_g)
my_cl <- penguins_no_NA$species
train_miss <- c()
cv_miss <- c()
# find the training and cv misclassification rates for k_nn from 1 through 10
for (k_nn in 1:10) {
my_knn_cv_out <- my_knn_cv(data = my_data, cl = my_cl, k_nn = k_nn, k_cv = 5)
train_miss[k_nn] <- mean(my_knn_cv_out[[1]] != my_cl)
cv_miss[k_nn] <- my_knn_cv_out[[2]]
}
# create a table with the results
my_table <- data.frame(k_nn = 1:10,
cv_err = round(cv_miss, 4),
train_err = round(train_miss, 4))
kable_styling(kable(my_table))
# create the matrix to store all the simulated MSEs
my_cv_MSEs <- matrix(NA, nrow = 30, ncol = 3)
counter <- 1
for (k in c(2, 5, 10)) {
k_MSE <- c()
for (i in 1:30) {
k_MSE[i] <- my_rf_cv(k)
}
# store the 30 simulated values for this k in its own row of the overall matrix
my_cv_MSEs[, counter] <- k_MSE
counter <- counter + 1
}
# the matrix of the generated average MSEs
head(my_cv_MSEs)
k2_cv_MSEs <- data.frame("MSE" = my_cv_MSEs[, 1])
k2_box_plot <- ggplot(data = k2_cv_MSEs, aes(x = "", y = MSE)) +
geom_boxplot(fill = "lightblue") +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 2",
x = "k = 2", y = "Average MSE") +
theme(plot.title = element_text(hjust = 0.5))
k2_box_plot
k5_cv_MSEs <- data.frame("MSE" = my_cv_MSEs[, 2])
k5_box_plot <- ggplot(data = k5_cv_MSEs, aes(x = "", y = MSE)) +
geom_boxplot(fill = "red") +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 5",
x = "k = 5", y = "Average MSE") +
theme(plot.title = element_text(hjust = 0.5))
k5_box_plot
k10_cv_MSEs <- data.frame("MSE" = my_cv_MSEs[, 3])
k10_box_plot <- ggplot(data = k10_cv_MSEs, aes(x = "", y = MSE)) +
geom_boxplot(fill = "lightgreen") +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 10",
x = "k = 10", y = "Average MSE") +
theme(plot.title = element_text(hjust = 0.5))
k10_box_plot
combined_cv_MSEs <- data.frame("Values" = c(my_cv_MSEs[, 1], my_cv_MSEs[, 2], my_cv_MSEs[, 3]),
"k" = c(rep(2, 30), rep(5, 30), rep(10, 30)))
combined_box_plot <- ggplot(data = combined_cv_MSEs, aes(x = as.factor(k), y = Values, fill = as.factor(k))) +
geom_boxplot() +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 2, 5, 10",
x = "k", y = "Average MSE", fill = "k") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_manual(values = c("lightblue", "red", "lightgreen"))
combined_box_plot
# create a table with each value of k and the corresponding summary statistics
my_MSE_table <- matrix(NA, nrow = 3, ncol = 3)
my_MSE_table[1, 1] <- 2
my_MSE_table[2, 1] <- 5
my_MSE_table[3, 1] <- 10
my_MSE_table[1, 2] <- mean(my_cv_MSEs[, 1])
my_MSE_table[2, 2] <- mean(my_cv_MSEs[, 2])
my_MSE_table[3, 2] <- mean(my_cv_MSEs[, 3])
my_MSE_table[1, 3] <- sd(my_cv_MSEs[, 1])
my_MSE_table[2, 3] <- sd(my_cv_MSEs[, 2])
my_MSE_table[3, 3] <- sd(my_cv_MSEs[, 3])
my_MSE_table <- data.frame(my_MSE_table)
colnames(my_MSE_table) <- c("k", "mean", "standard deviation")
# display the table
kable_styling(kable(my_MSE_table))
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
labs(title = "Actual v. Fitted Life Expectancy") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw(base_size = 15)
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
actual_v_fitted_plot <- ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
labs(title = "Actual v. Fitted Life Expectancy") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw(base_size = 15)
actual_v_fitted_plot
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
actual_v_fitted_plot <- ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
labs(title = "Actual v. Fitted Life Expectancy") +
theme_update(plot.title = element_text(hjust = 0.5)) +
theme_bw(base_size = 15)
actual_v_fitted_plot
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
actual_v_fitted_plot <- ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
labs(title = "Actual v. Fitted Life Expectancy") +
theme_update(plot.title = element_text(hjust = 0.5)) +
theme_bw(base_size = 15)
actual_v_fitted_plot
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
actual_v_fitted_plot <- ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
theme_bw(base_size = 15) +
labs(title = "Actual v. Fitted Life Expectancy") +
theme_update(plot.title = element_text(hjust = 0.5))
actual_v_fitted_plot
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
actual_v_fitted_plot <- ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
theme_bw(base_size = 15) +
labs(title = "Actual v. Fitted Life Expectancy") +
theme(plot.title = element_text(hjust = 0.5))
actual_v_fitted_plot
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# load the package
library(project3part1package)
# load the other packages used in this vignette
library(ggplot2)
library(kableExtra)
# load the Gapminder data set
data(my_gapminder)
my_data <- my_gapminder$lifeExp
hypothesis1 <- my_t.test(x = my_data, alternative = "two.sided", mu = 60)
kable(data.frame(hypothesis1))
hypothesis2 <- my_t.test(x = my_data, alternative = "less", mu = 60)
kable(data.frame(hypothesis2))
hypothesis3 <- my_t.test(x = my_data, alternative = "greater", mu = 60)
kable(data.frame(hypothesis3))
my_fit <- my_lm(lifeExp ~ gdpPercap + continent, data = my_gapminder)
signif(my_fit, 4)
gdpPercap_coeff <- signif(my_fit[2, 1], 3)
X <- model.matrix(lifeExp ~ gdpPercap + continent, my_gapminder)
beta <- my_fit[, 1]
fitted_data <- X %*% beta
actual_data <- my_gapminder$lifeExp
actual_v_fitted <- data.frame("Actual" = actual_data,
"Fitted" = fitted_data,
"Continent" = as.factor(my_gapminder$continent))
actual_v_fitted_plot <- ggplot(actual_v_fitted, aes(x = Actual, y = Fitted, fill = Continent)) +
geom_point(shape = 21,
size = 2,
color = "black",
alpha = 0.9) +
theme_bw(base_size = 15) +
labs(title = "Actual v. Fitted Life Expectancy") +
theme(plot.title = element_text(hjust = 0.5))
actual_v_fitted_plot
# load the penguins data
data(my_penguins)
# remove NAs from penguins
penguins_no_NA <- na.omit(my_penguins)
# separate the covariates and the true classification
my_data <- data.frame("bill_length" = penguins_no_NA$bill_length_mm,
"bill_depth" = penguins_no_NA$bill_depth_mm,
"flipper_length" = penguins_no_NA$flipper_length_mm,
"body_mass" = penguins_no_NA$body_mass_g)
my_cl <- penguins_no_NA$species
train_miss <- c()
cv_miss <- c()
# find the training and cv misclassification rates for k_nn from 1 through 10
for (k_nn in 1:10) {
my_knn_cv_out <- my_knn_cv(data = my_data, cl = my_cl, k_nn = k_nn, k_cv = 5)
train_miss[k_nn] <- mean(my_knn_cv_out[[1]] != my_cl)
cv_miss[k_nn] <- my_knn_cv_out[[2]]
}
# create a table with the results
my_table <- data.frame(k_nn = 1:10,
cv_err = round(cv_miss, 4),
train_err = round(train_miss, 4))
kable_styling(kable(my_table))
# create the matrix to store all the simulated MSEs
my_cv_MSEs <- matrix(NA, nrow = 30, ncol = 3)
counter <- 1
for (k in c(2, 5, 10)) {
k_MSE <- c()
for (i in 1:30) {
k_MSE[i] <- my_rf_cv(k)
}
# store the 30 simulated values for this k in its own row of the overall matrix
my_cv_MSEs[, counter] <- k_MSE
counter <- counter + 1
}
# the matrix of the generated average MSEs
head(my_cv_MSEs)
k2_cv_MSEs <- data.frame("MSE" = my_cv_MSEs[, 1])
k2_box_plot <- ggplot(data = k2_cv_MSEs, aes(x = "", y = MSE)) +
geom_boxplot(fill = "lightblue") +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 2",
x = "k = 2", y = "Average MSE") +
theme(plot.title = element_text(hjust = 0.5))
k2_box_plot
k5_cv_MSEs <- data.frame("MSE" = my_cv_MSEs[, 2])
k5_box_plot <- ggplot(data = k5_cv_MSEs, aes(x = "", y = MSE)) +
geom_boxplot(fill = "red") +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 5",
x = "k = 5", y = "Average MSE") +
theme(plot.title = element_text(hjust = 0.5))
k5_box_plot
k10_cv_MSEs <- data.frame("MSE" = my_cv_MSEs[, 3])
k10_box_plot <- ggplot(data = k10_cv_MSEs, aes(x = "", y = MSE)) +
geom_boxplot(fill = "lightgreen") +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 10",
x = "k = 10", y = "Average MSE") +
theme(plot.title = element_text(hjust = 0.5))
k10_box_plot
combined_cv_MSEs <- data.frame("Values" = c(my_cv_MSEs[, 1], my_cv_MSEs[, 2], my_cv_MSEs[, 3]),
"k" = c(rep(2, 30), rep(5, 30), rep(10, 30)))
combined_box_plot <- ggplot(data = combined_cv_MSEs, aes(x = as.factor(k), y = Values, fill = as.factor(k))) +
geom_boxplot() +
theme_classic(base_size = 15) +
labs(title = "A boxplot of the average MSE from k-fold cross validation \n of random forests run 30 times using k = 2, 5, 10",
x = "k", y = "Average MSE", fill = "k") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_manual(values = c("lightblue", "red", "lightgreen"))
combined_box_plot
# create a table with each value of k and the corresponding summary statistics
my_MSE_table <- matrix(NA, nrow = 3, ncol = 3)
my_MSE_table[1, 1] <- 2
my_MSE_table[2, 1] <- 5
my_MSE_table[3, 1] <- 10
my_MSE_table[1, 2] <- mean(my_cv_MSEs[, 1])
my_MSE_table[2, 2] <- mean(my_cv_MSEs[, 2])
my_MSE_table[3, 2] <- mean(my_cv_MSEs[, 3])
my_MSE_table[1, 3] <- sd(my_cv_MSEs[, 1])
my_MSE_table[2, 3] <- sd(my_cv_MSEs[, 2])
my_MSE_table[3, 3] <- sd(my_cv_MSEs[, 3])
my_MSE_table <- data.frame(my_MSE_table)
colnames(my_MSE_table) <- c("k", "mean", "standard deviation")
# display the table
kable_styling(kable(my_MSE_table))
devtools::check()
?my_gapminder
?my_gapminder
devtools::check()
?my_knn_cv
?my_lm
devtools::document()
?my_knn_cv
devtools::document()
devtools::document()
?my_knn_cv
devtools::document()
?my_knn_cv
?my_rf_cv
?my_gapminder
devtools::document()
?my_gapminder
devtools::document()
?my_gapminder
devtools::document()
?my_gapminder
devtools::document()
?my_gapminder
devtools::document()
?my_gapminder
devtools::document()
devtools::check()
